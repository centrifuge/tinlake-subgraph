specVersion: 0.0.2
description: Tinlake Mainnet Production
graft:
  base: QmNXmoKc82AHzMupxisVCAn1PHHMazqAdjjWcHyXm8m3Bj
  block: 14000000
schema:
  file: ./schema.graphql
dataSources:
  # Block handler across polls, using oldest pile
  - kind: ethereum/contract
    name: Block
    network: mainnet
    source:
      address: '0x95b74eF13fF280A89cE3d7bBEfc822c210e9939F'
      abi: Pile
      startBlock: 11063000
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.5
      language: wasm/assemblyscript
      entities:
        - Pool
        - Loan
      abis:
        - name: Pile
          file: ./abis/Pile.json
        - name: Assessor
          file: ./abis/Assessor.json
        - name: SeniorTranche
          file: ./abis/SeniorTranche.json
        - name: ERC20
          file: ./abis/ERC20.json
        - name: Reserve
          file: ./abis/Reserve.json
        - name: NavFeed
          file: ./abis/NavFeed.json
        - name: NftFeed
          file: ./abis/NftFeed.json
        - name: Shelf
          file: ./abis/Shelf.json
        - name: Tranche
          file: ./abis/Tranche.json
        - name: CfgRewardRate
          file: ./abis/CfgRewardRate.json
        - name: CfgSplitRewardRate
          file: ./abis/CfgSplitRewardRate.json
      blockHandlers:
        - handler: handleBlock
      file: ./src/mappings/Block.ts

  # Proxy registry across pools
  - kind: ethereum/contract
    name: ProxyRegistry
    network: mainnet
    source:
      address: '0xc9045c815bf123ad12ea75b9a7c579c1e05051f9'
      abi: ProxyRegistry
      startBlock: 9994872
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.5
      language: wasm/assemblyscript
      entities:
        - Pool
        - Loan
      abis:
        - name: ProxyRegistry
          file: ./abis/ProxyRegistry.json
      eventHandlers:
        - event: Created(indexed address,indexed address,address,uint256)
          handler: handleCreateProxy
      file: ./src/mappings/ProxyRegistry.ts

  # Pool registry
  - kind: ethereum/contract
    name: PoolRegistry
    network: mainnet
    source:
      address: '0xddf1c516cf87126c6c610b52fd8d609e67fb6033'
      abi: PoolRegistry
      startBlock: 11113233
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.5
      language: wasm/assemblyscript
      entities:
        - Pool
        - Loan
      abis:
        - name: PoolRegistry
          file: ./abis/PoolRegistry.json
        - name: Assessor
          file: ./abis/Assessor.json
      eventHandlers:
        - event: PoolCreated(address,bool,string,string)
          handler: handlePoolCreated
        - event: PoolUpdated(address,bool,string,string)
          handler: handlePoolUpdated
      file: ./src/mappings/PoolRegistry.ts

  - kind: ethereum/contract
    name: Claim
    network: mainnet
    source:
      address: '0x1cA3B2E7FfCAF83d9228a64e4726402B1d5CC054'
      abi: TinlakeClaimRad
      startBlock: 11686325
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.5
      language: wasm/assemblyscript
      entities:
        - RewardLink
      abis:
        - name: TinlakeClaimRad
          file: ./abis/TinlakeClaimRad.json
      eventHandlers:
        - event: Claimed(address,bytes32)
          handler: handleClaimed
      file: ./src/mappings/TinlakeClaimRad.ts

templates:
  - kind: ethereum/contract
    name: Coordinator
    network: mainnet
    source:
      abi: Coordinator
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.5
      language: wasm/assemblyscript
      entities:
        - Pool
      abis:
        - name: Coordinator
          file: ./abis/Coordinator.json
        - name: Assessor
          file: ./abis/Assessor.json
        - name: Pile
          file: ./abis/Pile.json
        - name: Tranche
          file: ./abis/Tranche.json
      callHandlers:
        - function: executeEpoch()
          handler: handleCoordinatorExecuteEpoch
        - function: closeEpoch()
          handler: handleCoordinatorCloseEpoch
      file: ./src/mappings/Coordinator.ts
  - kind: ethereum/contract
    name: Assessor
    network: mainnet
    source:
      abi: Assessor
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.5
      language: wasm/assemblyscript
      entities:
        - Pool
      abis:
        - name: Assessor
          file: ./abis/Assessor.json
      callHandlers:
        - function: file(bytes32,uint256)
          handler: handleAssessorFile
      file: ./src/mappings/Assessor.ts
  - kind: ethereum/contract
    name: Shelf
    network: mainnet
    source:
      abi: Shelf
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.5
      language: wasm/assemblyscript
      entities:
        - Pool
        - Loan
      abis:
        - name: Shelf
          file: ./abis/Shelf.json
        - name: Pile
          file: ./abis/Pile.json
        - name: SeniorTranche
          file: ./abis/SeniorTranche.json
        - name: Assessor
          file: ./abis/Assessor.json
        - name: NavFeed
          file: ./abis/NavFeed.json
      callHandlers:
        - function: issue(address,uint256)
          handler: handleShelfIssue
        - function: close(uint256)
          handler: handleShelfClose
        - function: borrow(uint256,uint256)
          handler: handleShelfBorrow
        - function: repay(uint256,uint256)
          handler: handleShelfRepay
      file: ./src/mappings/Shelf.ts
  - kind: ethereum/contract
    name: NftFeed
    network: mainnet
    source:
      abi: NftFeed
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.5
      language: wasm/assemblyscript
      entities:
        - Loan
      abis:
        - name: NftFeed
          file: ./abis/NftFeed.json
        - name: Shelf
          file: ./abis/Shelf.json
        - name: Pile
          file: ./abis/Pile.json
      callHandlers:
        - function: update(bytes32,uint256,uint256)
          handler: handleNftFeedUpdate
        - function: update(bytes32,uint256)
          handler: handleNftFeedUpdate
      file: ./src/mappings/NftFeed.ts
  - kind: ethereum/contract
    name: Token
    network: mainnet
    source:
      abi: ERC20
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.5
      language: wasm/assemblyscript
      entities:
        - Transfer
      abis:
        - name: ERC20
          file: ./abis/ERC20.json
      eventHandlers:
        - event: Transfer(indexed address,indexed address,uint256)
          handler: handleERC20Transfer
      file: ./src/mappings/ERC20.ts
  - kind: ethereum/contract
    name: Tranche
    network: mainnet
    source:
      abi: Tranche
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.5
      language: wasm/assemblyscript
      entities:
        - TokenBalance
      abis:
        - name: Tranche
          file: ./abis/Tranche.json
        - name: ERC20
          file: ./abis/ERC20.json
      callHandlers:
        - function: supplyOrder(address,uint256)
          handler: handleSupplyOrder
        - function: redeemOrder(address,uint256)
          handler: handleRedeemOrder
      file: ./src/mappings/Tranche.ts
